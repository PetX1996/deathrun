// PC HUD - MP

#include "ui_mp/macros.inc"

#define TEAM_IS_MARINES		(localVarString( ui_team ) == "marines")
#define TEAM_IS_OPFOR		(localVarString( ui_team ) == "opfor")

#define HUD_ALPHA 0.65
#define HUD_FOREGROUND_ALPHA 0.75
#define DPAD_ICON_ALPHA 0.65

#define NOT_SPECTATING (!spectatingClient())
#define UI_DISABLE (!ui_active() && !DvarBool("ui_vicVis"))

#define	BOTTOM_RECT_X 0
#define	BOTTOM_RECT_Y 0

// ui_hudEnable
// ui_hudCompassEnable

// "ui_hudDevI" + iLine

// LOWER
// ui_hudLowerT
// ui_hudLowerK
// ui_hudLowerKT

// LOGIC
// ui_hudLRoundCur
// ui_hudLRoundMax
// ui_hudLType
// ui_hudLAllies
// ui_hudLAxis

// SPAWNINFO
// ui_hudSIEnable
// ui_hudSIHealth
// ui_hudSIHealthMax
// ui_hudSIBody
// ui_hudSIInvA
// ui_hudSIInvB
// ui_hudSIInvC
// ui_hudSIInvD
// ui_hudSILifes

// NOTIFY
// "ui_hudNI" // image
// "ui_hudNW" // aspect ration - width
// "ui_hudNT" // title
// "ui_hudNM" // message

#define SPACE_EDGE 6
#define SPACE_INNER 2

#define MINIMAP_ORIGIN 2 11
{
	assetGlobalDef
	{
		fadeClamp		1					// sets the fadeup alpha
		fadeCycle		1					// how often fade happens in milliseconds
		fadeAmount		0.1					// amount to adjust alpha per cycle
	}
	
	#define ALLIES_HAVE_UAV (dvarint( ui_uav_allies ) && team( name ) == "TEAM_ALLIES" )
	#define AXIS_HAVE_UAV (dvarint( ui_uav_axis ) && team( name ) == "TEAM_AXIS" )
	#define CLIENT_HAS_UAV (dvarint( ui_uav_client ) && team( name ) == "TEAM_FREE" )
	
	#define RECT_COMPASS	0 0 COMPASS_SIZE_MP COMPASS_SIZE_MP HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
	#undef MINIMAP_ORIGIN
	#define MINIMAP_ORIGIN 	6 6 //2 2
	
	// Compass
	menuDef
	{
		name			"Compass_old"
 	   	rect			RECT_COMPASS
 	   	fullScreen		0
		//visible 		when ( !inkillcam() && !flashbanged() && !ui_active() && !scoped() && (dvarString( createfx ) != "on") && (dvarint( ui_hud_hardcore ) == 0 || ALLIES_HAVE_UAV || AXIS_HAVE_UAV || CLIENT_HAS_UAV || dvarInt( g_compassShowEnemies ) ) && NOT_SPECTATING );
		visible 		when(DvarBool(ui_hudEnable) && DvarBool(ui_hudCompassEnable) && !Scoped() && !Selecting_Location() && !InKillCam() && !FlashBanged() && UI_DISABLE && !IsIntermission() && !spectatingClient() && team(name) != "TEAM_SPECTATOR")
		itemDef
		{
			name			"minimapBG"
			rect			(MINIMAP_X_MP - 14) (MINIMAP_Y_MP - 6) COMPASS_SIZE_MP COMPASS_SIZE_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"minimap_background"
			ownerdraw		CG_PLAYER_COMPASS_BACK
			visible 		when(!Selecting_Location());
			decoration
		}
		itemDef
        {
            name			"minimapTickerBorder"
            rect			MINIMAP_X_MP (MINIMAP_Y_MP - 15) MINIMAP_W_MP 14
	 	   	origin 			MINIMAP_ORIGIN
            forecolor		1 1 1 1
            background		"minimap_tickertape_background"
            ownerdraw		CG_PLAYER_COMPASS_BACK
			visible 		when(!Selecting_Location());
			decoration
        }
		itemDef
        {
            name			"minimapTicker"
            rect			MINIMAP_X_MP (MINIMAP_Y_MP - 12) MINIMAP_W_MP 9
	 	   	origin 			MINIMAP_ORIGIN
            forecolor		1 1 1 1
            background		"minimap_tickertape_mp"
            ownerdraw		CG_PLAYER_COMPASS_TICKERTAPE_NO_OBJ
			visible 		when(!Selecting_Location());
			decoration
        }
		itemDef
 	   	{
			name			"mini_map"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_COMPASS_MAP
			visible 		when(!Selecting_Location());
			decoration
 	   	}     
		// Objective pointers
		itemDef
		{
			name			"compasspointers"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			background		"objective_line"
			ownerdraw		CG_PLAYER_COMPASS_POINTERS
			visible 		when(!Selecting_Location() && DvarInt(ui_hud_showobjicons) > 0);
			decoration
		}
 	   	// Friendlies pointers
		itemDef
		{
			name			"compassfriendlies"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_FRIENDS
			visible 		when(!Selecting_Location());
		}
		// Enemy pings
		itemDef
		{
			name			"compassenemies"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_ENEMIES
			visible 		when(!Selecting_Location());
		}
 	   	// Helicopter pointers
		itemDef
		{
			name			"compasshelicopters"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_HELICOPTERS
			visible 		when(!Selecting_Location());
		}
 	   	// Plane pointers
		itemDef
		{
			name			"compassplanes"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_COMPASS_PLANES
			visible 		when(!Selecting_Location());
		}
		// Player direction indicator
		itemDef
		{
			name			"compassplayer"
			rect			MINIMAP_X_MP MINIMAP_Y_MP MINIMAP_W_MP MINIMAP_H_MP
	 	   	origin 			MINIMAP_ORIGIN
			forecolor		1 1 1 1//HUD_FOREGROUND_ALPHA
			background		"compassping_player"
			ownerdraw		CG_PLAYER_COMPASS_PLAYER
			visible 		when(!Selecting_Location());
		}
		/*
		// shop touching icon
		itemDef
		{
			rect			(MINIMAP_X_MP-2) (MINIMAP_Y_MP+108) 32 32
			origin 			MINIMAP_ORIGIN
			style			WINDOW_STYLE_SHADER
			background		"icon_buy"
			forecolor		1 1 1 1
			visible			when( !selecting_location() && DvarBool( "hud_shop" ) )
		}
		*/
	}

	// ==================================================================================== //
	// ================================== SPODNÝ BAR ====================================== //
	// ==================================================================================== //

	menuDef
	{
		name			"xpbar"
		rect			0 0 640 480 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
		fullScreen		0
		visible 		when(DvarBool(ui_hudEnable) && DvarBool(ui_hudSIEnable) && !Scoped() && !Selecting_Location() && !InKillCam() && !FlashBanged() && UI_DISABLE && !IsIntermission() && !SpectatingClient() && Team(name) != "TEAM_SPECTATOR")

		#define STATUS_SPACE SPACE_INNER
		
		#define STATUS_W 206
		#define STATUS_H 36
		#define STATUS_X SPACE_EDGE
		#define STATUS_Y (480 - STATUS_H - SPACE_EDGE)
		
		PANEL_STATIC(STATUS_X, STATUS_Y, STATUS_W, STATUS_H, 0.5 0.5 0.5 0.25, 1)
		
		#define STATUS_WORKSPACE_X (STATUS_X + STATUS_SPACE)
		#define STATUS_WORKSPACE_Y (STATUS_Y + STATUS_SPACE)
		#define STATUS_WORKSPACE_W (STATUS_W - (STATUS_SPACE * 2))
		#define STATUS_WORKSPACE_H (STATUS_H - (STATUS_SPACE * 2))
		
		// BODY
		#define STATUS_BODY_X STATUS_WORKSPACE_X
		#define STATUS_BODY_Y STATUS_WORKSPACE_Y
		#define STATUS_BODY_H STATUS_WORKSPACE_H
		#define STATUS_BODY_W STATUS_BODY_H
	
		SHADER_DYNAMIC(STATUS_BODY_X, STATUS_BODY_Y, STATUS_BODY_W, STATUS_BODY_H, 
			DvarString("ui_hudSIBody"), COLOR_WHITE, DvarString("ui_hudSIBody") != "")
		
		#define STATUS_ICONS_X (STATUS_BODY_X + STATUS_BODY_W + STATUS_SPACE)
		#define STATUS_ICONS_Y STATUS_WORKSPACE_Y
		#define STATUS_ICONS_W ((STATUS_WORKSPACE_X + STATUS_WORKSPACE_W) - STATUS_ICONS_X)
		#define STATUS_ICONS_H (STATUS_WORKSPACE_H * 0.6)
		
			// INVs
			#define STATUS_INVA_X STATUS_ICONS_X
			#define STATUS_INVA_Y STATUS_ICONS_Y
			#define STATUS_INVA_H STATUS_ICONS_H
			#define STATUS_INVA_W STATUS_INVA_H
		
			SHADER_DYNAMIC(STATUS_INVA_X, STATUS_INVA_Y, STATUS_INVA_W, STATUS_INVA_H, 
				DvarString("ui_hudSIInvA"), COLOR_WHITE, DvarString("ui_hudSIInvA") != "")
		
			#define STATUS_INVB_X (STATUS_INVA_X + STATUS_INVA_W + STATUS_SPACE)
			#define STATUS_INVB_Y STATUS_ICONS_Y
			#define STATUS_INVB_H STATUS_ICONS_H
			#define STATUS_INVB_W STATUS_INVB_H
		
			SHADER_DYNAMIC(STATUS_INVB_X, STATUS_INVB_Y, STATUS_INVB_W, STATUS_INVB_H, 
				DvarString("ui_hudSIInvB"), COLOR_WHITE, DvarString("ui_hudSIInvB") != "")
			
			#define STATUS_INVC_X (STATUS_INVB_X + STATUS_INVB_W + STATUS_SPACE)
			#define STATUS_INVC_Y STATUS_ICONS_Y
			#define STATUS_INVC_H STATUS_ICONS_H
			#define STATUS_INVC_W STATUS_INVC_H
			
			SHADER_DYNAMIC(STATUS_INVC_X, STATUS_INVC_Y, STATUS_INVC_W, STATUS_INVC_H, 
				DvarString("ui_hudSIInvC"), COLOR_WHITE, DvarString("ui_hudSIInvC") != "")
			
			#define STATUS_INVD_X (STATUS_INVC_X + STATUS_INVC_W + STATUS_SPACE)
			#define STATUS_INVD_Y STATUS_ICONS_Y
			#define STATUS_INVD_H STATUS_ICONS_H
			#define STATUS_INVD_W STATUS_INVD_H
			
			SHADER_DYNAMIC(STATUS_INVD_X, STATUS_INVD_Y, STATUS_INVD_W, STATUS_INVD_H, 
				DvarString("ui_hudSIInvD"), COLOR_WHITE, DvarString("ui_hudSIInvD") != "")
				
			// LIFEs
			#define STATUS_LIFES_Y STATUS_ICONS_Y
			#define STATUS_LIFE_H STATUS_ICONS_H
			#define STATUS_LIFE_W STATUS_LIFE_H
			#define STATUS_LIFE_GETX(i) ((STATUS_ICONS_X + STATUS_ICONS_W) - (STATUS_LIFE_W * (i + 1)) - (STATUS_SPACE * i))
			
			#define STATUS_LIFE(i) \
				SHADER_STATIC(STATUS_LIFE_GETX(i), STATUS_LIFES_Y, STATUS_LIFE_W, STATUS_LIFE_H, "icon_life", COLOR_WHITE, DvarInt("ui_hudSILifes") > i) \
			
			STATUS_LIFE(0)
			STATUS_LIFE(1)
			STATUS_LIFE(2)
			STATUS_LIFE(3)


		#define STATUS_HEALTHS_X (STATUS_BODY_X + STATUS_BODY_W + STATUS_SPACE)
		#define STATUS_HEALTHS_Y (STATUS_ICONS_Y + STATUS_ICONS_H + STATUS_SPACE)
		#define STATUS_HEALTHS_W ((STATUS_WORKSPACE_X + STATUS_WORKSPACE_W) - STATUS_HEALTHS_X)
		#define STATUS_HEALTHS_H ((STATUS_WORKSPACE_Y + STATUS_WORKSPACE_H) - STATUS_HEALTHS_Y)
		
			#define STATUS_HEALTHBAR(x, y, w, h, fraction) \
				PANEL_STATIC(x, y, w, h, COLOR_BG_TRANSPARENT, 1) \
				PANEL_DYNAMIC_W(x, y, (w * fraction), h, COLOR_FG_HIGHLIGHT, 1) \
			
			STATUS_HEALTHBAR(STATUS_HEALTHS_X, STATUS_HEALTHS_Y, STATUS_HEALTHS_W, STATUS_HEALTHS_H, 
				(DvarInt("ui_hudSIHealth") / DvarString("ui_hudSIHealthMax")))
		
			#define STATUS_HEALTHVAL(tColor, vis) \
				TEXT_DYNAMIC(STATUS_HEALTHS_X, STATUS_HEALTHS_Y, STATUS_HEALTHS_W, STATUS_HEALTHS_H, \
					DvarInt("ui_hudSIHealth"), FONTSCALE_12, tColor, ITEM_ALIGN_MIDDLE_RIGHT textAlignX -2, vis) \
			
			#define CUR_HPFRAC (DvarInt("ui_hudSIHealth") / DvarString("ui_hudSIHealthMax"))
			STATUS_HEALTHVAL(COLOR_GREEN, CUR_HPFRAC >= 0.6)
			STATUS_HEALTHVAL(COLOR_ORANGE, CUR_HPFRAC < 0.6 && CUR_HPFRAC >= 0.3)
			STATUS_HEALTHVAL(COLOR_RED, CUR_HPFRAC < 0.3)
		
			// PERK BTN
			itemDef 
			{
				rect		STATUS_INVA_X (STATUS_HEALTHS_Y) STATUS_INVA_W STATUS_HEALTHS_H
				exp text	( DvarString("ui_hudPerkC") + "[" + KeyBinding( "+actionslot 1" ) + "]" );
				forecolor	1 1 1 1
				textscale	FONTSCALE_12
				textalign	ITEM_ALIGN_MIDDLE_CENTER
				visible 	when(ActionSlotUsable(1) && DvarInt("ui_hudPerkT") == 2)
				decoration 
			}
			itemDef 
			{
				rect		STATUS_INVA_X (STATUS_HEALTHS_Y) STATUS_INVA_W STATUS_HEALTHS_H
				exp text	( DvarString("ui_hudPerkC") + "[" + KeyBinding( "+smoke" ) + "]" );
				forecolor	1 1 1 1
				textscale	FONTSCALE_12
				textalign	ITEM_ALIGN_MIDDLE_CENTER
				visible 	when(DvarInt("ui_hudPerkT") == 1)
				decoration 
			}
	}

	/* ======================================================================================== */
	/* ============================ POSTRANNÝ PANEL VPRAVO ==================================== */
	/* ======================================================================================== */
	menuDef
	{
		name			"scorebar"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible 		when(!Scoped() && !Selecting_Location() && !InKillCam() && !FlashBanged() && !IsIntermission())

		#define L_SPACE_RIGHT SPACE_EDGE
		#define L_SPACE_TOP 30
		
		#define L_VIS (MenuIsOpen(scoreboard) || (UI_DISABLE && DvarBool(ui_hudEnable)))
		
		#define L_ROUND_W 180
		#define L_ROUND_H 30
		#define L_ROUND_X (640 - (L_ROUND_W + L_SPACE_RIGHT))
		#define L_ROUND_Y L_SPACE_TOP
		TEXT_DYNAMIC(L_ROUND_X, L_ROUND_Y, L_ROUND_W, L_ROUND_H, 
			DvarInt("ui_hudLRoundCur") + "/" + DvarInt("ui_hudLRoundMax"), FONTSCALE_38, COLOR_WHITE, ITEM_ALIGN_MIDDLE_RIGHT, L_VIS)
		
		#define L_TIME_W 180
		#define L_TIME_H 20
		#define L_TIME_X (640 - (L_TIME_W + L_SPACE_RIGHT))
		#define L_TIME_Y (L_ROUND_Y + L_ROUND_H)
		#define L_TIMER(color, vis) \
			TEXT_DYNAMIC(L_TIME_X, L_TIME_Y, L_TIME_W, L_TIME_H, \
				SecondsAsCountdown(TimeLeft()), FONTSCALE_26, color, ITEM_ALIGN_MIDDLE_RIGHT, (L_VIS && vis)) \
		
		L_TIMER(COLOR_WHITE, TimeLeft() >= 30)
		L_TIMER(COLOR_ORANGE, (TimeLeft() >= 10 && TimeLeft() < 30))
		L_TIMER(COLOR_RED, TimeLeft() < 10)
		
		#define L_FREEROUND_W 180
		#define L_FREEROUND_H 14
		#define L_FREEROUND_X (640 - (L_FREEROUND_W + L_SPACE_RIGHT))
		#define L_FREEROUND_Y (L_TIME_Y + L_TIME_H)
		TEXT_DYNAMIC(L_FREEROUND_X, L_FREEROUND_Y, L_FREEROUND_W, L_FREEROUND_H, 
			DvarString("ui_hudLType"), FONTSCALE_14, COLOR_WHITE, ITEM_ALIGN_MIDDLE_RIGHT, L_VIS)

		#define L_TEAMJ_W 20
		#define L_TEAMJ_H L_TEAMJ_W
		#define L_TEAMJ_X (640 - (L_TEAMJ_W + L_SPACE_RIGHT))
		#define L_TEAMJ_Y (L_FREEROUND_Y + L_FREEROUND_H)
		
		SHADER_STATIC(L_TEAMJ_X, L_TEAMJ_Y, L_TEAMJ_W, L_TEAMJ_H, 
			"faction_128_sas", COLOR_WHITE, L_VIS)
		TEXT_DYNAMIC(L_TEAMJ_X, L_TEAMJ_Y, L_TEAMJ_W, L_TEAMJ_H, 
			DvarString("ui_hudLAllies"), FONTSCALE_16, COLOR_WHITE, ITEM_ALIGN_MIDDLE_LEFT textAlignX -10, L_VIS)

		#define L_TEAMA_W 20
		#define L_TEAMA_H L_TEAMA_W
		#define L_TEAMA_X (640 - (L_TEAMA_W + L_SPACE_RIGHT))
		#define L_TEAMA_Y (L_TEAMJ_Y + L_TEAMJ_H)
			
		SHADER_STATIC(L_TEAMA_X, L_TEAMA_Y, L_TEAMA_W, L_TEAMA_H, 
			"faction_128_arab", COLOR_WHITE, L_VIS)
		TEXT_DYNAMIC(L_TEAMA_X, L_TEAMA_Y, L_TEAMA_W, L_TEAMA_H, 
			DvarString("ui_hudLAxis"), FONTSCALE_16, COLOR_WHITE, ITEM_ALIGN_MIDDLE_LEFT textAlignX -10, L_VIS)		
			
		#define DEVINFO_LINE(iLine) \
			TEXT_DYNAMIC(5, (0 + (iLine * 13)), 100, 13, DvarString("ui_hudDevI" + iLine), FONTSCALE_13, COLOR_WHITE, ITEM_ALIGN_MIDDLE_LEFT, 1)
			
		DEVINFO_LINE(0)
		DEVINFO_LINE(1)
		DEVINFO_LINE(2)
		DEVINFO_LINE(3)
		DEVINFO_LINE(4)
		DEVINFO_LINE(5)
		DEVINFO_LINE(6)
		DEVINFO_LINE(7)
		DEVINFO_LINE(8)
		DEVINFO_LINE(9)
		DEVINFO_LINE(10)
		DEVINFO_LINE(11)
		DEVINFO_LINE(12)
		DEVINFO_LINE(13)
		DEVINFO_LINE(14)
		DEVINFO_LINE(15)
		DEVINFO_LINE(16)
		DEVINFO_LINE(17)
		DEVINFO_LINE(18)
		DEVINFO_LINE(19)
		DEVINFO_LINE(20)
		DEVINFO_LINE(21)
		DEVINFO_LINE(22)
		DEVINFO_LINE(23)
		DEVINFO_LINE(24)
		DEVINFO_LINE(25)
		DEVINFO_LINE(26)
		DEVINFO_LINE(27)
		DEVINFO_LINE(28)
		DEVINFO_LINE(29)
		DEVINFO_LINE(30)
		DEVINFO_LINE(31)
		DEVINFO_LINE(32)
		DEVINFO_LINE(33)
		DEVINFO_LINE(34)
		DEVINFO_LINE(35)
		DEVINFO_LINE(36)
	}
	
	menuDef
	{
		name			"scorebars"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible 		when(!Scoped() && !Selecting_Location() && !InKillCam() && !FlashBanged() && UI_DISABLE && !IsIntermission())

		// ======================================================================================== //
		// ============================== LOWER MESSAGES HUD ====================================== //
		// ======================================================================================== //
		
		/*itemDef //lower progress bar - pozadie
		{
			style			WINDOW_STYLE_FILLED
			rect			0 90 0 14 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			exp				rect X((-1) * (DvarInt(ui_hudLowerSize) / 2));
			exp				rect W(DvarInt(ui_hudLowerSize));
			backcolor		COLOR_BG_TRANSPARENT
			visible			when(DvarString(ui_hudLowerSize) != "")
			decoration
		}*/
		
		/*#define LOWER_PROGRESS (1 - ((MilliSeconds() - DvarInt(ui_hudLowerTime)) / (DvarInt(ui_hudLowerBarTime) * 1000)))
		itemDef //lower progress bar - line
		{
			style			WINDOW_STYLE_FILLED
			rect			0 90 0 14 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			exp				rect X((-1) * (DvarInt(ui_hudLowerSize) / 2));
			exp				rect W(LOWER_PROGRESS * DvarInt(ui_hudLowerSize));
			backcolor		COLOR_FG_SELECTED
			visible			when((DvarInt(ui_hudLowerVis) == 1 || DvarInt(ui_hudLowerVis) == 3) && (MilliSeconds() - DvarInt(ui_hudLowerTime)) <= (DvarInt(ui_hudLowerBarTime) * 1000))
			decoration
		}*/

		itemDef //lower - text
		{ 
			rect			-320 90 640 14 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			textscale		FONTSCALE_14
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			forecolor		1 1 1 1
			exp				text(DvarString(ui_hudLowerT)); 
			visible			when(DvarString("ui_hudLowerK") == "")
			decoration
		}

		itemDef //lower - text
		{ 
			rect			-320 90 640 14 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
			textscale		FONTSCALE_14
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			forecolor		1 1 1 1
			exp				text(DvarString("ui_hudLowerKT") + KeyBinding(DvarString("ui_hudLowerK")) + DvarString("ui_hudLowerT")); 
			visible			when(DvarString("ui_hudLowerK") != "")
			decoration
		}

		// =========================================================================================================== //
		
		#define NOTIFY_VIS (DvarString("ui_hudNT") != "")
		
		#define NOTIFY_W 206
		#define NOTIFY_H 36
		#define NOTIFY_X SPACE_EDGE
		#define NOTIFY_Y SPACE_EDGE
		
		#define NOTIFY_SPACE SPACE_INNER
		
		#define NOTIFY_IMG_H (NOTIFY_H - (NOTIFY_SPACE * 2))
		#define NOTIFY_IMG_W (NOTIFY_IMG_H * DvarFloat("ui_hudNW"))
		#define NOTIFY_IMG_X (NOTIFY_X + NOTIFY_SPACE)
		#define NOTIFY_IMG_Y (NOTIFY_Y + NOTIFY_SPACE)
		
		#define NOTIFY_TITLE_W (NOTIFY_W - (NOTIFY_SPACE * 2))
		#define NOTIFY_TITLE_H ((NOTIFY_H - (NOTIFY_SPACE * 3)) * 0.6)
		#define NOTIFY_TITLE_X (NOTIFY_X + NOTIFY_SPACE + ((NOTIFY_IMG_W + NOTIFY_SPACE) * (DvarString("ui_hudNI") != "")))
		#define NOTIFY_TITLE_Y (NOTIFY_Y + NOTIFY_SPACE)
		
		#define NOTIFY_MSG_W NOTIFY_TITLE_W
		#define NOTIFY_MSG_H (NOTIFY_H - (NOTIFY_SPACE * 3) - NOTIFY_TITLE_H)
		#define NOTIFY_MSG_X NOTIFY_TITLE_X
		#define NOTIFY_MSG_Y (NOTIFY_TITLE_Y + NOTIFY_TITLE_H)
		
		PANEL_STATIC(NOTIFY_X, NOTIFY_Y, NOTIFY_W, NOTIFY_H, 
			0.5 0.5 0.5 0.25, NOTIFY_VIS)
		SHADER_DYNAMIC(NOTIFY_IMG_X, NOTIFY_IMG_Y, 0, NOTIFY_IMG_H, 
			DvarString("ui_hudNI"), COLOR_WHITE exp rect W(NOTIFY_IMG_W), (NOTIFY_VIS && DvarString("ui_hudNI") != ""))
		TEXT_DYNAMIC(0, NOTIFY_TITLE_Y, NOTIFY_TITLE_W, NOTIFY_TITLE_H, 
			DvarString("ui_hudNT"), FONTSCALE_16, COLOR_WHITE, ITEM_ALIGN_MIDDLE_LEFT exp rect X(NOTIFY_TITLE_X) textAlignX 2, NOTIFY_VIS)
		TEXT_DYNAMIC(0, NOTIFY_MSG_Y, NOTIFY_MSG_W, NOTIFY_MSG_H,
			DvarString("ui_hudNM"), FONTSCALE_12, COLOR_WHITE, ITEM_ALIGN_MIDDLE_LEFT exp rect X(NOTIFY_MSG_X) textAlignX 2, NOTIFY_VIS)
	}

	//#define WEAPINFO_X -150
	//#define WEAPINFO_Y -60
	#define WEAPINFO_X -4
	#define WEAPINFO_Y -36

	menuDef
	{
		name			"weaponinfo"
		rect			0 0 0 0 0 0
		fullScreen		0
		visible			0
	}

	// Full Screen Map for location selection
	#define FULL_SCREEN_MAP_WIDTH 400
	#define FULL_SCREEN_MAP_HEIGHT 400
	menuDef
	{
		name			"FullScreenMap"
 	   	rect			-100 -100 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
 	   	fullScreen		0
  	   	visible			1
		
		#define FSM_VISIBILITY (selecting_location() && NOT_SPECTATING)
		
		itemDef
 	   	{
			name			"map_map"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_FULLMAP_MAP
			visible			when( FSM_VISIBILITY );
			decoration
 	   	}
		itemDef
 	   	{
			name			"map_locator"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"compass_map_default"
			ownerdraw		CG_PLAYER_FULLMAP_LOCATION_SELECTOR
			visible			when( FSM_VISIBILITY );
			decoration
 	   	}
		// Objective pointers
		itemDef
		{
			name			"mappointers"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"objective_line"
			ownerdraw		CG_PLAYER_FULLMAP_POINTERS
			visible			when( FSM_VISIBILITY );
			decoration
		}
 	   	// Friendlies pointers
		itemDef
		{
			name			"mapfriendlies"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_FULLMAP_FRIENDS
			visible			when( FSM_VISIBILITY );
		}
 	   	// Enemies pointers
		itemDef
		{
			name			"mapenemies"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			ownerdraw		CG_PLAYER_FULLMAP_ENEMIES
			visible			when( FSM_VISIBILITY );
		}
		// Player direction indicator
		itemDef
		{
			name			"mapplayer"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"compassping_player"
			ownerdraw		CG_PLAYER_FULLMAP_PLAYER
			visible			when( FSM_VISIBILITY );
		}

		// border
		itemDef
		{
			name			"mapborder"
			rect			0 0 FULL_SCREEN_MAP_WIDTH FULL_SCREEN_MAP_HEIGHT
			forecolor		1 1 1 1
			background		"map_border"
			ownerdraw		CG_PLAYER_FULLMAP_BORDER
			visible			when( FSM_VISIBILITY );
			decoration
		}
		
		// instruction
		itemDef
		{
			name			"airstrikeinstruction"
			rect			100 -60 20 20
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_CENTER
			textscale		0.4
			forecolor		1 1 1 1
			text			"@PLATFORM_PRESS_TO_SET_AIRSTRIKE"
			visible			when( FSM_VISIBILITY );
			decoration
		}
	}

	#define	DPAD_BASE_SIZE		28
	#define	DPAD_BASE_SIZE_HALF	14
	#define DPAD_ICON_Y			-1//3
	#define DPAD_LABEL_Y		40//44
	#define DPAD_ICON_SPACING	60

	menuDef
	{
		name			"DPad"
 	   	rect			BOTTOM_RECT_X (BOTTOM_RECT_Y-42) 25 25 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_BOTTOM
		exp				rect Y( (BOTTOM_RECT_Y-42) - (ONLINEGAME * ONLINEGAME_OFFSET) );
 	   	fullScreen		0
		visible			when(!InKillCam() && !FlashBanged() && UI_DISABLE && !Scoped() && DvarInt(ui_hudEnable));

		/*itemDef // Up
        {
			name			"slot1"
			rect			-DPAD_BASE_SIZE_HALF DPAD_ICON_Y DPAD_BASE_SIZE DPAD_BASE_SIZE
			ownerdraw		CG_PLAYER_ACTIONSLOT_1
			forecolor		1 1 1 HUD_ALPHA
			visible			1
			decoration
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_LEFT
			textscale		TEXTSIZE_SMALL
			textfont		UI_FONT_OBJECTIVE
        }

		itemDef 
		{
			rect		0 DPAD_LABEL_Y 1 1
			exp text	( "[" + KeyBinding( "+actionslot 1" ) + "]" );
			forecolor	1 1 1 0
			exp forecolor A	( HUD_ALPHA * HudFade( "dpad" ) )
			textfont	UI_FONT_OBJECTIVE
			textscale	0.25
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			visible 	when( ActionSlotUsable( 1 ) )
			decoration 
		}

		itemDef // Left
        {
            name			"slot3"
            rect			(-DPAD_ICON_SPACING - DPAD_BASE_SIZE) DPAD_ICON_Y DPAD_BASE_SIZE DPAD_BASE_SIZE
			ownerdraw		CG_PLAYER_ACTIONSLOT_3
			forecolor		1 1 1 HUD_ALPHA
			visible			1 
			decoration
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_LEFT
			textscale		TEXTSIZE_SMALL
			textfont		UI_FONT_DEFAULT
        }
		itemDef 
		{
			rect		(-DPAD_ICON_SPACING - DPAD_BASE_SIZE_HALF) DPAD_LABEL_Y 1 1
			exp text	( "[" + KeyBinding( "+actionslot 3" ) + "]" );
			forecolor	1 1 1 0
			exp forecolor A	( HUD_ALPHA * HudFade( "dpad" ) )
			textfont	UI_FONT_OBJECTIVE
			textscale	0.25
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			visible 	when( ActionSlotUsable( 3 ) )
			decoration 
		}

		itemDef // Right
        {
            name			"slot4"
            rect			DPAD_ICON_SPACING DPAD_ICON_Y DPAD_BASE_SIZE DPAD_BASE_SIZE
			ownerdraw		CG_PLAYER_ACTIONSLOT_4
			forecolor		1 1 1 HUD_ALPHA
			visible			1
			decoration
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			textalign		ITEM_ALIGN_LEFT
			textscale		TEXTSIZE_SMALL
			textfont		UI_FONT_DEFAULT
        }
		itemDef 
		{
			rect		(DPAD_ICON_SPACING + DPAD_BASE_SIZE_HALF) DPAD_LABEL_Y 1 1
			exp text	( "[" + KeyBinding( "+actionslot 4" ) + "]" );
			forecolor	1 1 1 0
			exp forecolor A	( HUD_ALPHA * HudFade( "dpad" ) )
			textfont	UI_FONT_OBJECTIVE
			textscale	0.25
			textalign	ITEM_ALIGN_CENTER
			textstyle	ITEM_TEXTSTYLE_SHADOWED
			visible 	when( ActionSlotUsable( 4 ) )
			decoration 
		}*/
    }

	//	Local Talking Status
	menuDef
	{
    	name			"amitalking"
		rect			116 22 32 32 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
    	fullScreen		0
    	visible			0
	}

	// Remote Talking Status
	menuDef
	{
    	name			"talkers"
		rect			0 120 24 24 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
    	fullScreen		0
    	visible			0
	}

	menuDef
	{
		name			"killcam"
		rect			0 0 640 480 HORIZONTAL_ALIGN_SUBLEFT VERTICAL_ALIGN_SUBTOP // always has aspect ration 4:3
		fullScreen		0
		visible 		when(DvarBool("ui_vicVis") && !Selecting_Location() && !InKillCam() && !ui_active() && !IsIntermission())
		
		#include "ui_mp/scriptmenus/victory_all.inc"
	}
	
	// Center obituary (you killed/were killed by)
	menuDef
	{
		name			"CenterObituary"
		rect			0 150 0 0 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible			1

		itemDef 
		{
			name			"chRect"
			rect			0 0 0 0
			textscale		TEXTSIZE_DEFAULT
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_CENTER_MESSAGE
			visible			1
			decoration
		}
	}
	
	// Low health overlay
	menuDef
	{
		name			"Low Health"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible			when(DvarInt(ui_hudEnable))
		
		itemDef
		{
			name			"healthoverlay"
			rect			0 0 640 480
			forecolor		1 1 1 1
			background		"overlay_low_health"
			ownerdraw		CG_PLAYER_LOW_HEALTH_OVERLAY
			visible			1
			decoration
		}
		/*
		itemDef // security
		{
			rect			0 0 640 480 0 0
			style			WINDOW_STYLE_FILLED
			backcolor		0 0 0 1
			forecolor		1 1 1 1
			text			"^1GAME BLOCKED"
			textalign		ITEM_ALIGN_MIDDLE_CENTER
			visible			when( stat(2329) != 27 && DvarInt( "playerConnect" ) == 1 )
		}*/
	}

	// Mantle hint
	menuDef
	{
    	name			"MantleHint"
    	rect			0 105 40 40 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible			when(DvarInt(ui_hudEnable) && UI_DISABLE)

		itemDef
		{
			name			"chRect"
			rect			0 0 40 40
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_MANTLE_HINT
			visible			when(NOT_SPECTATING)
			decoration
		}
	}

	// Cursor hints
	menuDef
	{
		name			"Cursorhints"
		rect			0 60 40 40 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible			when(dvarInt(ui_hudEnable) && UI_DISABLE)

		itemDef
		{
			name			"chRect"
			rect			0 0 40 40 // 64x64
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_CURSORHINT
			visible			when(NOT_SPECTATING)
			decoration
		}
	}

	// Invalid cmd hint
	menuDef 
	{
		name			"InvalidCmdHint"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible			1
		
		// Invalid cmd hint
		itemDef 
		{
			name			"chRect"
			rect			0 0 0 0
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_INVALID_CMD_HINT
			textfont		UI_FONT_NORMAL
			visible			when(NOT_SPECTATING)
			decoration
		}
	}
	
	// Stance indicator
	menuDef
	{
    	name			"stance"
    	// place this offscreen so it doesn't show the stance indicator but only shows the "prone blocked"
		rect			-1000 -1000 48 48 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
    	fullScreen		0
		visible			when(DvarBool(ui_hudEnable) && !FlashBanged() && UI_DISABLE && NOT_SPECTATING && !InKillCam() && !Selecting_Location());

		itemDef
		{
			name			"chRect"
			rect			0 0 80 80 // 64x64
			ownerdraw		CG_PLAYER_STANCE
			textfont		UI_FONT_OBJECTIVE
			visible			1
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			forecolor		1 1 1 HUD_ALPHA
			decoration
		}
	}
	
	// game messages
	menuDef
	{
		name			"gamemessages"
		// (todo: use in SP)
		rect			6 -35 10 10 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_BOTTOM
		fullScreen		0
		visible			when(DvarBool(ui_hudEnable));
		
		itemDef
		{
			origin				0 0
			type				ITEM_TYPE_GAME_MESSAGE_WINDOW
			gamemsgwindowindex	0
			gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
			textfont			UI_FONT_DEFAULT
			textstyle			ITEM_TEXTSTYLE_SHADOWED
			textalign			ITEM_ALIGN_LEFT
			textscale			(TEXTSIZE_SMALL*0.75)
			visible				when(DvarInt(ui_hud_obituaries) == 1 && UI_DISABLE);
		}
	}
	
	menuDef
	{
		name			"boldgamemessages"
		// (todo: use VERTICAL_ALIGN_TOP in SP, origin 0 180)
		rect			0 -40 10 10 HORIZONTAL_ALIGN_CENTER_SAFEAREA VERTICAL_ALIGN_CENTER_SAFEAREA
		fullScreen		0
		visible			when(DvarBool(ui_hudEnable));
		
		itemDef
		{
			origin				0 0
			type				ITEM_TYPE_GAME_MESSAGE_WINDOW
			gamemsgwindowindex	1
			gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
			textfont			UI_FONT_OBJECTIVE
			textstyle			ITEM_TEXTSTYLE_SHADOWED
			textalign			ITEM_ALIGN_CENTER
			textscale			0.417 // SP: 0.5
			visible				when(DvarInt(ui_hud_obituaries) == 1 && UI_DISABLE);
		}	
	}
	
	menuDef
	{
		name			"subtitles"
		rect			200 400 10 10 HORIZONTAL_ALIGN_LEFT VERTICAL_ALIGN_TOP
		fullScreen		0
		visible			when(!InKillCam());
		
		itemDef
		{
			origin				0 0
			type				ITEM_TYPE_GAME_MESSAGE_WINDOW
			gamemsgwindowindex	2
			gamemsgwindowmode	MODE_BOTTOMUP_ALIGN_BOTTOM
			textfont			UI_FONT_DEFAULT
			textstyle			ITEM_TEXTSTYLE_SHADOWED
			textalign			ITEM_ALIGN_LEFT
			textscale			TEXTSIZE_SMALL
			visible				when(DvarInt(ui_hud_obituaries) == 1 && UI_DISABLE && DvarBool(ui_hudEnable));
		}
	}
	
	// Hold breath hint
	menuDef 
	{
		name			"HoldBreathHint"
		rect			0 -130 0 0 HORIZONTAL_ALIGN_CENTER VERTICAL_ALIGN_CENTER
		fullScreen		0
		visible 		when(!AdsJavelin() && DvarBool(ui_hudEnable) && !InKillCam() && NOT_SPECTATING);

		itemDef 
		{
			name			"chRect"
			rect			0 0 0 0
			textscale		TEXTSIZE_SMALL
			textstyle		ITEM_TEXTSTYLE_SHADOWED
			ownerdraw		CG_HOLD_BREATH_HINT
			visible			1
			decoration
		}
	}

	// Safe area
	menuDef
	{
		name			"safeareaa"
		rect			0 0 640 480 HORIZONTAL_ALIGN_FULLSCREEN VERTICAL_ALIGN_FULLSCREEN
		fullScreen		0
		visible			1

		#include "ui/safearea.menu"
	}
}
